//
//  main.cpp
//  carPenalties
//
//  Created by Aashna Narula on 04/11/17.
//  Copyright Â© 2017 Aashna Narula. All rights reserved.
//

#include <iostream>
#include <math.h>
using namespace std;

struct node
{
    int data;
    node *next;
}*head=NULL;

void insert(int d)
{
    node *p=new node();
    p->data=d;
    p->next=NULL;
    if(head==NULL)
    {
        head=p;
        return;
    }
    else
    {
        node *temp=head;
        while (temp->next!=NULL)
        {
            temp=temp->next;
        }
        temp->next=p;
    }
}

void display(node *p)
{
    while (p->next!=NULL)
    {
        cout<<p->data<<" ";
        p=p->next;
    }
    cout<<p->data<<" ";
}

void reverse(node **p)
{
    node *nxt=new node();
    node *prev=NULL;
    node *cur=*p;
    while (cur)
    {
        nxt=cur->next;
        cur->next=prev;
        prev=cur;
        cur=nxt;
    }
    *p=prev;
}

void segregate(node *p)
{
    node *oddStart=NULL;
    node *evenStart=NULL;
    node *odd=NULL;
    node *even=NULL;
    while (p!=NULL)
    {
        if(p->data%2==0)
        {
            if(evenStart==NULL)
            {
                evenStart=p;
                even=evenStart;
            }
            else
            {
                even->next=p;
                even=even->next;
            }
        }
        else
        {
            if(oddStart==NULL)
            {
                oddStart=p;
                odd=oddStart;
            }
            else
            {
                odd->next=p;
                odd=odd->next;
            }
        }
        p=p->next;
    }
    even->next=NULL;
    reverse(&evenStart);
    cout<<"\nDisplay: ";
    if(oddStart==NULL)
    {
        display(evenStart);
        return;
    }
    odd->next=evenStart;
    display(oddStart);
}


int main(int argc, const char * argv[])
{
    int n,i,x;
    cin>>n;
    for (i=0; i<n ; i++)
    {
        cin>>x;
        insert(x);
    }
    cout<<"\nDisplay: ";
    display(head);
    segregate(head);
    return 0;
}

